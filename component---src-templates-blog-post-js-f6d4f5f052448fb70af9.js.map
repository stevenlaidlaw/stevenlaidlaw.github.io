{"version":3,"file":"component---src-templates-blog-post-js-f6d4f5f052448fb70af9.js","mappings":"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","sources":["webpack://blog/./gatsby-config.js","webpack://blog/./src/hooks/useTheme.js","webpack://blog/./src/components/layout.js","webpack://blog/./src/components/seo.js","webpack://blog/./src/templates/blog-post.js"],"sourcesContent":["const author = `Steven Laidlaw`\n/**\n * @type {import('gatsby').GatsbyConfig}\n */\nmodule.exports = {\n  siteMetadata: {\n    title: `devoid of context`,\n    author,\n    description: `the unfiltered ramblings of software engineer ${author}`,\n    siteUrl: `https://stevenlaidlaw.com`,\n  },\n  plugins: [\n    `gatsby-plugin-image`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        path: `${__dirname}/articles`,\n        name: `blog`,\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    },\n    {\n      resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          {\n            resolve: `gatsby-remark-images`,\n            options: {\n              maxWidth: 630,\n            },\n          },\n          {\n            resolve: `gatsby-remark-responsive-iframe`,\n            options: {\n              wrapperStyle: `margin-bottom: 1.0725rem`,\n            },\n          },\n          `gatsby-remark-prismjs`,\n        ],\n      },\n    },\n    `gatsby-transformer-sharp`,\n    `gatsby-plugin-sharp`,\n    {\n      resolve: `gatsby-plugin-feed`,\n      options: {\n        query: `\n          {\n            site {\n              siteMetadata {\n                title\n                description\n                siteUrl\n                site_url: siteUrl\n              }\n            }\n          }\n        `,\n        feeds: [\n          {\n            serialize: ({ query: { site, allMarkdownRemark } }) =>\n              allMarkdownRemark.nodes.map(node =>\n                Object.assign({}, node.frontmatter, {\n                  description: node.excerpt,\n                  date: node.frontmatter.date,\n                  url: site.siteMetadata.siteUrl + node.fields.slug,\n                  guid: site.siteMetadata.siteUrl + node.fields.slug,\n                  custom_elements: [{ \"content:encoded\": node.html }],\n                })\n              ),\n            query: `{\n              allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n                nodes {\n                  excerpt\n                  html\n                  fields {\n                    slug\n                  }\n                  frontmatter {\n                    title\n                    date\n                  }\n                }\n              }\n            }`,\n            output: \"/rss.xml\",\n            title: \"devoid of context - rss feed\",\n          },\n        ],\n      },\n    },\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: `devoid of context`,\n        short_name: `devoid of context`,\n        start_url: `/`,\n        background_color: `#ffffff`,\n        display: `minimal-ui`,\n        icon: `src/images/logo.svg`, // This path is relative to the root of the site.\n      },\n    },\n  ],\n}\n","import { useState, useEffect } from \"react\"\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(\"light\")\n\n  useEffect(() => {\n    // Get initial theme from localStorage if it exists\n    const savedTheme = localStorage.getItem(\"theme\")\n    if (savedTheme) {\n      setTheme(savedTheme)\n      document.documentElement.setAttribute(\"data-theme\", savedTheme)\n    }\n  }, [])\n\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\"\n    setTheme(newTheme)\n    localStorage.setItem(\"theme\", newTheme)\n    document.documentElement.setAttribute(\"data-theme\", newTheme)\n  }\n\n  return { theme, toggleTheme }\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { siteMetadata } from \"../../gatsby-config\"\nimport { useTheme } from \"../hooks/useTheme\"\n\nconst { title, description } = siteMetadata\n\nconst Layout = ({ children }) => {\n  const { theme, toggleTheme } = useTheme()\n  const isDark = theme === \"dark\"\n\n  return (\n    <div className=\"global-wrapper\">\n      <div class=\"theme-toggle\">\n        <div class=\"theme-toggle-label\">\n          {isDark\n            ? \"how can you see anything in here?\"\n            : \"ahh the light burns me!\"}\n        </div>\n        <label class=\"switch\">\n          <input type=\"checkbox\" onClick={toggleTheme} checked={isDark} />\n          <span class=\"slider\"></span>\n        </label>\n      </div>\n\n      <header className=\"global-header\">\n        <h1 className=\"main-heading\">\n          <Link to=\"/\">{title}</Link>\n        </h1>\n        <div>{description}</div>\n        <div>\n          <a href=\"https://github.com/stevenlaidlaw\">github</a>\n          {\" // \"}\n          <a href=\"https://www.linkedin.com/in/stevenglaidlaw/\">linkedin</a>\n        </div>\n      </header>\n      <main>{children}</main>\n      <footer></footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","module","exports","siteMetadata","title","description","siteUrl","plugins","resolve","options","path","__dirname","name","maxWidth","wrapperStyle","query","feeds","serialize","site","allMarkdownRemark","nodes","map","node","Object","assign","frontmatter","excerpt","date","url","fields","slug","guid","custom_elements","html","output","short_name","start_url","background_color","display","icon","children","theme","toggleTheme","setTheme","useState","useEffect","savedTheme","localStorage","getItem","document","documentElement","setAttribute","newTheme","setItem","useTheme","isDark","className","class","type","onClick","checked","Link","to","href","useStaticQuery","metaDescription","defaultTitle","content","property","Head","data","markdownRemark","post","previous","next","location","siteTitle","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","style","flexWrap","justifyContent","listStyle","padding","rel"],"sourceRoot":""}