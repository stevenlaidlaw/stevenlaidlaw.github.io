{"data":{"site":{"siteMetadata":{"title":"Steven Laidlaw","author":"Steven Laidlaw"}},"markdownRemark":{"id":"99672d31-587a-5d3c-9eab-aab7cda54084","excerpt":"New stuff is hard to learn. I’ve been using Docker at work for a couple months now, but struggled to get my head around what was actually going on. I got that…","html":"<p>New stuff is hard to learn.</p>\n<p>I’ve been using Docker at work for a couple months now, but struggled to get my head around what was actually going on. I got that containers were like better VMs using Linux magic, and they were taking the world by storm, but that’s about it. I read <a href=\"https://www.goodreads.com/book/show/40040850-learn-docker---fundamentals-of-docker-18-x\">a book</a> on the subject and that really helped me to understand the <em>why</em>, but I didn’t didn’t get the <em>how</em>. I generally have three rules to make something sink in:</p>\n<ol>\n<li>Learn it.</li>\n<li>Use it.</li>\n<li>Teach it.</li>\n</ol>\n<p>So I figured why not do the thing  and build something with it? So I decided to over-engineer the hell out of a todo app.</p>\n<ol>\n<li>Intro</li>\n<li>Spec\na. Three teir\nb. Restful</li>\n<li>Implementation\na. Postgres\nb. Server\nc. App</li>\n<li>Dockerization</li>\n<li>Conclusion</li>\n</ol>","frontmatter":{"title":"Learn Docker via an Over-engineered Todo","date":"April 29, 2019"}}},"pageContext":{"slug":"/overengineered-todo/","previous":{"fields":{"slug":"/perixi-latest/"},"frontmatter":{"title":"Perixi"}},"next":null}}