{"data":{"site":{"siteMetadata":{"title":"Steven Laidlaw","author":"Steven Laidlaw"}},"markdownRemark":{"id":"99672d31-587a-5d3c-9eab-aab7cda54084","excerpt":"New stuff is hard to learn. I’ve been using Docker at work for a couple months now, but struggled to get my head around what was actually going on. I got that…","html":"<p>New stuff is hard to learn.</p>\n<p>I’ve been using Docker at work for a couple months now, but struggled to get my head around what was actually going on. I got that containers were like better VMs using Linux magic, and they were taking the world by storm, but that’s about it. I read <a href=\"https://www.goodreads.com/book/show/40040850-learn-docker---fundamentals-of-docker-18-x\">a book</a> on the subject and that really helped me to understand the <em>why</em>, but I didn’t didn’t get the <em>how</em>. I generally have three rules to make something sink in:</p>\n<ol>\n<li>Learn it.</li>\n<li>Use it.</li>\n<li>Teach it.</li>\n</ol>\n<p>I’d already done the first and so figured why not do the second thing? So welcome to an over-engineered todo app.</p>\n<h2>Write the spec</h2>\n<p>First we need to lay out the spec to make sure we know what we’re building. To emulate a real life app I made the decision to build it in the standard three-tier, RESTful way. I wanted three separate containers that spoke to each other: the DB, the server, and the app. For these I chose to use Postgres, Express, and React, respectively, but those technologies aren’t the point of this article and will be glossed over. The code is fully available at the end of the article, so if you’re interesting in that part (or making fun of me for bad code) then feel free to peruse.</p>\n<p>In any case, here is the basic spec I came up with:</p>\n<ol>\n<li>Database container automatically initialise with relevant structure.</li>\n<li>\n<p>Express server with the following RESTful endpoints:</p>\n<ol>\n<li>GET /todo - List all todos</li>\n<li>POST /todo - </li>\n</ol>\n</li>\n</ol>\n<p>So it’s a weak spec. I’m not a Product Manager, sue me, but it serves our purpose.</p>\n<p>=======</p>\n<ol>\n<li>Intro</li>\n<li>Spec\na. Three teir\nb. Restful</li>\n<li>Implementation\na. Postgres\nb. Server\nc. App</li>\n<li>Dockerization</li>\n<li>Conclusion</li>\n</ol>","frontmatter":{"title":"Learn Docker via an Over-engineered Todo","date":"April 29, 2019"}}},"pageContext":{"slug":"/overengineered-todo/","previous":{"fields":{"slug":"/perixi-latest/"},"frontmatter":{"title":"Perixi"}},"next":null}}